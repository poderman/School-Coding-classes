

#https://www.elecfreaks.com/joystick-bit-for-micro-bit.html
#https://www.elecfreaks.com/learn-en/microbitExtensionModule/joystick_bit_v1.html


buttonVal = 0
item = 0
def button():
    global buttonVal, item
    buttonVal = pins.analog_read_pin(AnalogPin.P2)
    if buttonVal < 256:
        item = 1
    elif buttonVal < 597:
        item = 2
    elif buttonVal < 725:
        item = 3
    elif buttonVal < 793:
        item = 4
    elif buttonVal < 836:
        item = 5
    elif buttonVal < 938:
        item = 6
    else:
        item = 0

def on_forever():
    button()
    if item:
        basic.show_number(item)
    elif pins.analog_read_pin(AnalogPin.P0) < 400:
        basic.show_string("-X")
    elif pins.analog_read_pin(AnalogPin.P0) > 600:
        basic.show_string("+X")
    elif pins.analog_read_pin(AnalogPin.P1) < 400:
        basic.show_string("-Y")
    elif pins.analog_read_pin(AnalogPin.P1) > 600:
        basic.show_string("+Y")
    else:
        basic.clear_screen()
basic.forever(on_forever)



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////





#https://www.instructables.com/Programming-a-MicroBit-Robot-JoystickBit-Controlle/

from microbit import *

# Please tag us if used!
# We'd love to see what you make:
# @ScienceOxford

while True:

'''
INPUTS
joystick:bit
'''

buttons = {2: 'A',
           516: 'B',
           684: 'C',
           768: 'D',
           853: 'E',
           819: 'F'}

def button_press():
    press = pin2.read_analog()
    if press < 900:
        for number in range(press-5, press+5):
            if number in buttons:
                return buttons[number]

def joystick_push():
    x = pin0.read_analog()
    y = pin1.read_analog()
    return x, y
    
    
